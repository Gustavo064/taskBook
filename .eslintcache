[{"/home/gustavo/Documentos/taskbox/src/stories/Page.stories.js":"1","/home/gustavo/Documentos/taskbox/src/stories/Button.js":"2","/home/gustavo/Documentos/taskbox/src/App.js":"3","/home/gustavo/Documentos/taskbox/src/components/Task.stories.js":"4","/home/gustavo/Documentos/taskbox/src/index.js":"5","/home/gustavo/Documentos/taskbox/src/reportWebVitals.js":"6","/home/gustavo/Documentos/taskbox/src/components/Task.js":"7","/home/gustavo/Documentos/taskbox/src/components/TaskList.stories.js":"8","/home/gustavo/Documentos/taskbox/src/components/TaskList.js":"9","/home/gustavo/Documentos/taskbox/src/lib/redux.js":"10","/home/gustavo/Documentos/taskbox/src/components/InboxScreen.stories.js":"11","/home/gustavo/Documentos/taskbox/src/components/InboxScreen.js":"12"},{"size":424,"mtime":1611575008726,"results":"13","hashOfConfig":"14"},{"size":1101,"mtime":1611575008726,"results":"15","hashOfConfig":"14"},{"size":331,"mtime":1606252250000,"results":"16","hashOfConfig":"14"},{"size":1401,"mtime":1611664710407,"results":"17","hashOfConfig":"14"},{"size":500,"mtime":1606252250000,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":1606252250000,"results":"19","hashOfConfig":"14"},{"size":1152,"mtime":1606252250000,"results":"20","hashOfConfig":"14"},{"size":1587,"mtime":1606252250000,"results":"21","hashOfConfig":"14"},{"size":1929,"mtime":1606252250000,"results":"22","hashOfConfig":"14"},{"size":1682,"mtime":1606252250000,"results":"23","hashOfConfig":"14"},{"size":808,"mtime":1606252250000,"results":"24","hashOfConfig":"14"},{"size":904,"mtime":1606252250000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fqenaw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/home/gustavo/Documentos/taskbox/src/stories/Page.stories.js",["55"],"/home/gustavo/Documentos/taskbox/src/stories/Button.js",[],"/home/gustavo/Documentos/taskbox/src/App.js",[],"/home/gustavo/Documentos/taskbox/src/components/Task.stories.js",["56","57","58"],"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { withKnobs, object } from '@storybook/addon-knobs';\n\nimport Task from './Task';\n\nexport default {\n  component: Task,\n  title: 'Task',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/,\n   // Parameters used in Story at component level.\n  // Learn more about parameters in https://storybook.js.org/docs/react/writing-stories/parameters\n  parameters: { assets: ['designs/items.png'] }\n};\n\nconst Template = (args) => <Task {...args} />;\n\nexport const Default = Template.bind({});\n\nDefault.args = {\n  task: {\n    id: \"1\",\n    title: 'Test Task',\n    state: 'TASK_INBOX',\n    updatedAt: new Date(2018, 0, 1, 9, 0),\n  },\n  \n};\n\n\nexport const Pinned = Template.bind({});\nPinned.args = {\n  task: {\n    ...Default.args.task,\n    state: 'TASK_PINNED',\n  },\n};\n\nexport const Archived = Template.bind({});\nArchived.args = {\n  task: {\n    ...Default.args.task,\n    state: 'TASK_ARCHIVED',\n  },\n};\n\nconst longTitleString = `This task's name is absurdly large. In fact, I think if I keep going I might end up with content overflow. What will happen? The star that represents a pinned task could have text overlapping. The text could cut-off abruptly when it reaches the star. I hope not!`;\n\nexport const LongTitle = Template.bind({});\nLongTitle.args = {\n  task: {\n    ...Default.args.task,\n    title: longTitleString,\n  }\n};\n","/home/gustavo/Documentos/taskbox/src/index.js",[],["59","60"],"/home/gustavo/Documentos/taskbox/src/reportWebVitals.js",[],"/home/gustavo/Documentos/taskbox/src/components/Task.js",["61"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Task({ task: { id, title, state }, onArchiveTask, onPinTask }) {\n  return (\n    <div className={`list-item ${state}`}>\n      <label className=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={state === 'TASK_ARCHIVED'}\n          disabled={true}\n          name=\"checked\"\n        />\n        <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)} />\n      </label>\n      <div className=\"title\">\n        <input type=\"text\" value={title} readOnly={true} placeholder=\"Input title\" style={{ textOverflow: 'ellipsis' }} />\n      </div>\n\n      <div className=\"actions\" onClick={event => event.stopPropagation()}>\n        {state !== 'TASK_ARCHIVED' && (\n          <a onClick={() => onPinTask(id)}>\n            <span className={`icon-star`} />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\nTask.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n  }),\n  onArchiveTask: PropTypes.func,\n  onPinTask: PropTypes.func,\n};",["62","63"],"/home/gustavo/Documentos/taskbox/src/components/TaskList.stories.js",["64"],"/home/gustavo/Documentos/taskbox/src/components/TaskList.js",[],"/home/gustavo/Documentos/taskbox/src/lib/redux.js",[],"/home/gustavo/Documentos/taskbox/src/components/InboxScreen.stories.js",["65"],"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Provider } from 'react-redux';\n\nimport { PureInboxScreen } from './InboxScreen';\nimport * as TaskListStories from './TaskList.stories';\n\n\nexport default {\n  component: PureInboxScreen,\n  title: 'InboxScreen',\n  parameters: { assets: ['designs/app.png'] },\n  decorators: [(story) => <Provider store={store}>{story()}</Provider>],\n};\n\n// A super-simple mock of a redux store\nconst store = {\n  getState: () => {\n    return {\n      tasks:TaskListStories.Default.args.tasks,\n    };\n  },\n  subscribe: () => 0,\n  dispatch: action('dispatch'),\n};\n\nconst Template = (args) => <PureInboxScreen {...args} />;\n\nexport const Default = Template.bind({});\n\nexport const Error = Template.bind({});\nError.args = {\n  error: \"Something\",\n};","/home/gustavo/Documentos/taskbox/src/components/InboxScreen.js",[],{"ruleId":"66","severity":1,"message":"67","line":6,"column":1,"nodeType":"68","endLine":9,"endColumn":3},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":3,"column":21,"nodeType":"71","messageId":"72","endLine":3,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":7,"column":1,"nodeType":"68","endLine":15,"endColumn":3},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":22,"column":11,"nodeType":"80","endLine":22,"endColumn":44},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":1,"nodeType":"68","endLine":11,"endColumn":3},{"ruleId":"66","severity":1,"message":"67","line":9,"column":1,"nodeType":"68","endLine":14,"endColumn":3},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'action' is defined but never used.","Identifier","unusedVar","'object' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["83"],["84"],"no-global-assign","no-unsafe-negation"]